{"version":3,"sources":["components/Dashboard/Dashboard.js","components/Login/Login.js","components/Prefrences/Prefrences.js","utils/queries.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","Login","className","type","Preferences","QUERY_USERS","gql","Home","useQuery","data","loading","users","map","user","username","client","ApolloClient","uri","cache","InMemoryCache","App","useState","token","setToken","ApolloProvider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEe,SAASA,IACtB,OACE,2C,MCDW,SAASC,IACpB,OACI,sBAAKC,UAAU,gBAAf,UACI,+CACA,iCACI,kCACI,yCACA,uBAAOC,KAAK,YAEhB,kCACI,yCACA,uBAAOA,KAAK,gBAEhB,8BACI,wBAAQA,KAAK,SAAb,4BCfL,SAASC,IACtB,OACE,6C,8DCFSC,EAAcC,YAAH,8GCcTC,EAZF,WAET,MAA0BC,YAASH,GAAlBI,GAAjB,EAAQC,QAAR,EAAiBD,MACVE,GAAY,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAME,QAAS,GAE9B,OACI,8BACKA,EAAMC,KAAI,SAAAC,GAAI,OAAI,8BAAMA,EAAKC,iBCFpCC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,MAiCEC,MA9Bf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OAAKD,EAMH,eAACE,EAAA,EAAD,CAAgBT,OAAQA,EAAxB,UACE,8BACE,cAAC,EAAD,MAEF,sBAAKb,UAAU,UAAf,UACE,6CACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,KAAK,aAAZ,SACE,cAACzB,EAAD,MAEF,cAAC,IAAD,CAAOyB,KAAK,eAAZ,SACE,cAACrB,EAAD,iBAjBH,cAAC,EAAD,CAAOmB,SAAUA,KCNbG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14168242.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Dashboard() {\n  return(\n    <h2>Dashboard</h2>\n  );\n}","import React from 'react';\nimport './Login.css';\n\nexport default function Login() {\n    return (\n        <div className=\"login-wrapper\">\n            <h1>Please Log In</h1>\n            <form>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" />\n                </label>\n                <label>\n                    <p>Password</p>\n                    <input type=\"password\" />\n                </label>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}","import { gql } from '@apollo/client';\n\nexport const QUERY_USERS = gql`\n  query users {\n    users {\n      _id\n      username\n      email\n    }\n  }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USERS } from '../utils/queries';\n\nconst Home = () => {\n\n    const { loading, data } = useQuery(QUERY_USERS);\n     const users = data?.users || [];\n\n    return (\n        <div>\n            {users.map(user => <div>{user.username}</div>)}\n        </div>\n    )\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from '../src/components/Dashboard/Dashboard';\nimport Login from '../src/components/Login/Login';\nimport Preferences from '../src/components/Prefrences/Prefrences';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport './App.css';\nimport Home from './pages/Home';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [token, setToken] = useState();\n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n\n    <ApolloProvider client={client}>\n      <div>\n        <Home />\n      </div>\n      <div className=\"wrapper\">\n        <h1>Application</h1>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/preferences\">\n              <Preferences />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}