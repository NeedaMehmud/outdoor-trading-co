{"version":3,"sources":["utils/queries.js","assets/images/logo.png","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["gql","Nav","Navbar","bg","sticky","Brand","href","src","logo","variant","class","type","placeholder","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAE2BA,YAAH,8G,uBCFT,MAA0B,iCCiC1BC,MA7Bf,WACE,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAA1B,SACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,SACE,qBAAKC,IAAKC,QAGhB,uBACA,cAACN,EAAA,EAAD,CAAQC,GAAG,OAAOM,QAAQ,OAA1B,SACI,eAACP,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,UACE,uBAAMI,MAAM,SAAZ,UACE,uBACEA,MAAM,oBACNC,KAAK,SACLC,YAAY,SACZ,aAAW,WAEb,wBAAQF,MAAM,oBAAoBC,KAAK,SAAvC,uBAIF,mBAAGL,KAAK,IAAR,8BClBNO,G,MAAS,IAAIC,IAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,OAaEC,MAVf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBN,OAAQA,EAAxB,SACE,8BACE,cAAC,EAAD,SCLOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b33e5dd0.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USERS = gql`\n  query users {\n    users {\n      _id\n      username\n      email\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/logo.10615c52.png\";","import \"../style/Nav.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"../assets/images/logo.png\";\n\nfunction Nav() {\n  return (\n    <>\n      <Navbar bg=\"light\" sticky=\"top\">\n          <Navbar.Brand href=\"#home\">\n            <img src={logo} />\n          </Navbar.Brand>\n      </Navbar>\n      <br />\n      <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            <form class=\"d-flex\">\n              <input\n                class=\"form-control me-3\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button class=\"btn btn-secondary\" type=\"submit\">\n                Search\n              </button>\n            </form>\n            <a href=\"#\">Sign In</a>\n          </Navbar.Brand>\n      </Navbar>\n      </>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport \"./style/Reset.css\";\nimport \"./style/Index.css\";\nimport Home from \"./pages/Home\";\nimport Nav from \"./components/Nav\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <Nav />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}